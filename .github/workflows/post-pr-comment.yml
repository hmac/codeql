# This workflow is the second part of the process described in
# .github/workflows/qhelp-pr-preview.yml
# See that file for more info.

name: Add PR comment with QHelp preview
on:
  workflow_run:
    workflows: [Render QHelp changes]
    types:
      - completed

permissions:
  pull-requests: write
  actions: read

jobs:
  post_comment:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        run: gh run download "${WORKFLOW_RUN_ID}" --repo "${GITHUB_REPOSITORY}" --name "comment"
        env:
          GITHUB_TOKEN: ${{ github.token }}
          WORKFLOW_RUN_ID: ${{ github.event.workflow_run.id }}

      - name: Check that PR SHA matches workflow SHA
        run: |
          PR="$(grep -o '^[0-9]\+$' pr.txt)"
          PR_HEAD_SHA="$(gh api "/repos/${GITHUB_REPOSITORY}/pulls/${PR}" --jq .head.sha)"
          # Check that the pull-request head SHA matches the head SHA of the workflow run
          if [ "${WORKFLOW_RUN_HEAD_SHA}" != "${PR_HEAD_SHA}" ]; then
            echo "PR head SHA ${PR_HEAD_SHA} does not match workflow_run event SHA ${WORKFLOW_RUN_HEAD_SHA}. Stopping." 1>&2
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}
          WORKFLOW_RUN_HEAD_SHA: ${{ github.event.workflow_run.head_commit.id }}

      # create-or-update-comment doesn't support fetching the comment directly
      # from a file, so we have to output it from a step.
      - id: get-comment-body
        run: |
          body="$(cat comment.txt)"
          # Escape newlines - sadly required for some reason:
          # https://github.community/t/set-output-truncates-multiline-strings/16852/3
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=body::$body"

      - id: get-pr-number
        run: |
          pr="$(cat pr.txt)"
          echo "::set-output name=pr-number::$pr"

      - name: Find existing comment, if it exists
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ steps.get-pr-number.outputs.pr-number }}
          comment-author: 'github-actions[bot]'
          body-includes: QHelp previews
          direction: last
          token: ${{ github.token }}

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ steps.get-pr-number.outputs.pr-number }}
          edit-mode: replace
          token: ${{ github.token }}
          body: ${{ steps.get-comment-body.outputs.body }}
